version: "3.8"

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - DATABASE_URL=postgresql://betterstatus:password@postgres:5432/betterstatus
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-here
      - ENC_KEY=your-encryption-key-here
      - CORS_ORIGIN=*
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ./src:/app/src
      - ./tsconfig.json:/app/tsconfig.json
      - ./logs:/app/logs
    command: ["npm", "run", "dev"]

  workers:
    build: .
    command: ["npm", "run", "workers"]
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://betterstatus:password@postgres:5432/betterstatus
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-here
      - ENC_KEY=your-encryption-key-here
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ./src:/app/src
      - ./tsconfig.json:/app/tsconfig.json
      - ./logs:/app/logs

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=betterstatus
      - POSTGRES_USER=betterstatus
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./drizzle:/docker-entrypoint-initdb.d
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
